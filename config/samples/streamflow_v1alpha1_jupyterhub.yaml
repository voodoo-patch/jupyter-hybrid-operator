apiVersion: streamflow.edu.unito.it/v1alpha1
kind: Jupyterhub
metadata:
  name: jupyterhub-sample
spec:
  # Default values copied from <project_dir>/helm-charts/jupyterhub/values.yaml
  cull:
    concurrency: 10
    enabled: true
    every: 600
    maxAge: 0
    removeNamedServers: false
    timeout: 3600
    users: false
  custom: {}
  debug:
    enabled: false
  fullnameOverride: ""
  global:
    safeToShowValues: false
  hub:
    activeServerLimit: null
    allowNamedServers: false
    annotations: {}
    args: []
    authenticatePrometheus: null
    baseUrl: /
    command: []
    concurrentSpawnLimit: 64
    config:
      JupyterHub:
        admin_access: true
        authenticator_class: dummy
    consecutiveFailureLimit: 5
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsGroup: 1000
      runAsUser: 1000
    cookieSecret: null
    db:
      password: null
      pvc:
        accessModes:
        - ReadWriteOnce
        annotations: {}
        selector: {}
        storage: 1Gi
        storageClassName: null
        subPath: null
      type: sqlite-pvc
      upgrade: null
      url: null
    deploymentStrategy:
      type: Recreate
    existingSecret: null
    extraConfig: {}
    extraContainers: []
    extraEnv: {}
    extraFiles: {}
    extraPodSpec: {}
    extraVolumeMounts: []
    extraVolumes: []
    fsGid: 1000
    image:
      name: jupyterhub/k8s-hub
      pullPolicy: null
      pullSecrets: []
      tag: 1.2.0
    initContainers: []
    labels: {}
    lifecycle: {}
    livenessProbe:
      enabled: true
      failureThreshold: 30
      initialDelaySeconds: 300
      periodSeconds: 10
      timeoutSeconds: 3
    namedServerLimitPerUser: null
    networkPolicy:
      allowedIngressPorts: []
      egress:
      - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      enabled: true
      ingress: []
      interNamespaceAccessLabels: ignore
    nodeSelector: {}
    pdb:
      enabled: false
      maxUnavailable: null
      minAvailable: 1
    readinessProbe:
      enabled: true
      failureThreshold: 1000
      initialDelaySeconds: 0
      periodSeconds: 2
      timeoutSeconds: 1
    redirectToServer: null
    resources: {}
    service:
      annotations: {}
      extraPorts: []
      loadBalancerIP: null
      ports:
        nodePort: null
      type: ClusterIP
    serviceAccount:
      annotations: {}
    services: {}
    shutdownOnLogout: null
    templatePaths: []
    templateVars: {}
    tolerations: []
  imagePullSecret:
    automaticReferenceInjection: true
    create: false
    email: null
    password: null
    registry: null
    username: null
  imagePullSecrets: []
  ingress:
    annotations: {}
    enabled: false
    hosts: []
    pathSuffix: null
    pathType: Prefix
    tls: []
  nameOverride: null
  prePuller:
    annotations: {}
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsGroup: 65534
      runAsUser: 65534
    continuous:
      enabled: true
    extraImages: {}
    extraTolerations: []
    hook:
      containerSecurityContext:
        allowPrivilegeEscalation: false
        runAsGroup: 65534
        runAsUser: 65534
      enabled: true
      image:
        name: jupyterhub/k8s-image-awaiter
        pullPolicy: null
        pullSecrets: []
        tag: 1.2.0
      nodeSelector: {}
      podSchedulingWaitDuration: 10
      pullOnlyOnChanges: true
      resources: {}
      serviceAccount:
        annotations: {}
      tolerations: []
    pause:
      containerSecurityContext:
        allowPrivilegeEscalation: false
        runAsGroup: 65534
        runAsUser: 65534
      image:
        name: k8s.gcr.io/pause
        pullPolicy: null
        pullSecrets: []
        tag: "3.5"
    pullProfileListImages: true
    resources: {}
  proxy:
    annotations: {}
    chp:
      containerSecurityContext:
        allowPrivilegeEscalation: false
        runAsGroup: 65534
        runAsUser: 65534
      defaultTarget: null
      errorTarget: null
      extraCommandLineFlags: []
      extraEnv: {}
      extraPodSpec: {}
      image:
        name: jupyterhub/configurable-http-proxy
        pullPolicy: null
        pullSecrets: []
        tag: 4.5.0
      livenessProbe:
        enabled: true
        initialDelaySeconds: 60
        periodSeconds: 10
      networkPolicy:
        allowedIngressPorts:
        - http
        - https
        egress:
        - to:
          - ipBlock:
              cidr: 0.0.0.0/0
        enabled: true
        ingress: []
        interNamespaceAccessLabels: ignore
      nodeSelector: {}
      pdb:
        enabled: false
        maxUnavailable: null
        minAvailable: 1
      readinessProbe:
        enabled: true
        failureThreshold: 1000
        initialDelaySeconds: 0
        periodSeconds: 2
      resources: {}
      tolerations: []
    deploymentStrategy:
      rollingUpdate: null
      type: Recreate
    https:
      enabled: false
      hosts: []
      letsencrypt:
        acmeServer: https://acme-v02.api.letsencrypt.org/directory
        contactEmail: null
      manual:
        cert: null
        key: null
      secret:
        crt: tls.crt
        key: tls.key
        name: null
      type: letsencrypt
    labels: {}
    secretSync:
      containerSecurityContext:
        allowPrivilegeEscalation: false
        runAsGroup: 65534
        runAsUser: 65534
      image:
        name: jupyterhub/k8s-secret-sync
        pullPolicy: null
        pullSecrets: []
        tag: 1.2.0
      resources: {}
    secretToken: null
    service:
      annotations: {}
      disableHttpPort: false
      extraPorts: []
      labels: {}
      loadBalancerIP: null
      loadBalancerSourceRanges: []
      nodePorts:
        http: null
        https: null
      type: LoadBalancer
    traefik:
      containerSecurityContext:
        allowPrivilegeEscalation: false
        runAsGroup: 65534
        runAsUser: 65534
      extraDynamicConfig: {}
      extraEnv: {}
      extraPodSpec: {}
      extraPorts: []
      extraStaticConfig: {}
      extraVolumeMounts: []
      extraVolumes: []
      hsts:
        includeSubdomains: false
        maxAge: 15724800
        preload: false
      image:
        name: traefik
        pullPolicy: null
        pullSecrets: []
        tag: v2.4.11
      labels: {}
      networkPolicy:
        allowedIngressPorts:
        - http
        - https
        egress:
        - to:
          - ipBlock:
              cidr: 0.0.0.0/0
        enabled: true
        ingress: []
        interNamespaceAccessLabels: ignore
      nodeSelector: {}
      pdb:
        enabled: false
        maxUnavailable: null
        minAvailable: 1
      resources: {}
      serviceAccount:
        annotations: {}
      tolerations: []
  rbac:
    enabled: true
  scheduling:
    corePods:
      nodeAffinity:
        matchNodePurpose: prefer
      tolerations:
      - effect: NoSchedule
        key: hub.jupyter.org/dedicated
        operator: Equal
        value: core
      - effect: NoSchedule
        key: hub.jupyter.org_dedicated
        operator: Equal
        value: core
    podPriority:
      defaultPriority: 0
      enabled: false
      globalDefault: false
      userPlaceholderPriority: -10
    userPlaceholder:
      containerSecurityContext:
        allowPrivilegeEscalation: false
        runAsGroup: 65534
        runAsUser: 65534
      enabled: true
      image:
        name: k8s.gcr.io/pause
        pullPolicy: null
        pullSecrets: []
        tag: "3.5"
      replicas: 0
      resources: {}
    userPods:
      nodeAffinity:
        matchNodePurpose: prefer
      tolerations:
      - effect: NoSchedule
        key: hub.jupyter.org/dedicated
        operator: Equal
        value: user
      - effect: NoSchedule
        key: hub.jupyter.org_dedicated
        operator: Equal
        value: user
    userScheduler:
      containerSecurityContext:
        allowPrivilegeEscalation: false
        runAsGroup: 65534
        runAsUser: 65534
      enabled: true
      extraPodSpec: {}
      image:
        name: k8s.gcr.io/kube-scheduler
        pullPolicy: null
        pullSecrets: []
        tag: v1.19.13
      logLevel: 4
      nodeSelector: {}
      pdb:
        enabled: true
        maxUnavailable: 1
        minAvailable: null
      plugins:
        score:
          disabled:
          - name: SelectorSpread
          - name: TaintToleration
          - name: PodTopologySpread
          - name: NodeResourcesBalancedAllocation
          - name: NodeResourcesLeastAllocated
          - name: NodePreferAvoidPods
          - name: NodeAffinity
          - name: InterPodAffinity
          - name: ImageLocality
          enabled:
          - name: NodePreferAvoidPods
            weight: 161051
          - name: NodeAffinity
            weight: 14631
          - name: InterPodAffinity
            weight: 1331
          - name: NodeResourcesMostAllocated
            weight: 121
          - name: ImageLocality
            weight: 11
      replicas: 2
      resources: {}
      serviceAccount:
        annotations: {}
      tolerations: []
  singleuser:
    cloudMetadata:
      blockWithIptables: true
      ip: 169.254.169.254
    cmd: jupyterhub-singleuser
    cpu:
      guarantee: null
      limit: null
    defaultUrl: null
    events: true
    extraAnnotations: {}
    extraContainers: []
    extraEnv: {}
    extraFiles: {}
    extraLabels:
      hub.jupyter.org/network-access-hub: "true"
    extraNodeAffinity:
      preferred: []
      required: []
    extraPodAffinity:
      preferred: []
      required: []
    extraPodAntiAffinity:
      preferred: []
      required: []
    extraPodConfig: {}
    extraResource:
      guarantees: {}
      limits: {}
    extraTolerations: []
    fsGid: 100
    image:
      name: jupyterhub/k8s-singleuser-sample
      pullPolicy: null
      pullSecrets: []
      tag: 1.2.0
    initContainers: []
    lifecycleHooks: {}
    memory:
      guarantee: 1G
      limit: null
    networkPolicy:
      allowedIngressPorts: []
      egress:
      - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
            - 169.254.169.254/32
      enabled: true
      ingress: []
      interNamespaceAccessLabels: ignore
    networkTools:
      image:
        name: jupyterhub/k8s-network-tools
        pullPolicy: null
        pullSecrets: []
        tag: 1.2.0
    nodeSelector: {}
    podNameTemplate: null
    profileList: []
    serviceAccountName: null
    startTimeout: 300
    storage:
      capacity: 10Gi
      dynamic:
        pvcNameTemplate: claim-{username}{servername}
        storageAccessModes:
        - ReadWriteOnce
        storageClass: null
        volumeNameTemplate: volume-{username}{servername}
      extraLabels: {}
      extraVolumeMounts: []
      extraVolumes: []
      homeMountPath: /home/jovyan
      static:
        pvcName: null
        subPath: '{username}'
      type: dynamic
    uid: 1000
  
  
